if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

" Plugins will be downloaded under the specified directory.
call plug#begin('~/.vim/plugged')

" Declare the list of plugins.
Plug 'kaicataldo/material.vim'
Plug 'preservim/nerdtree'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'pangloss/vim-javascript'
Plug 'maxmellon/vim-jsx-pretty'
Plug 'mxw/vim-jsx'
Plug 'mattn/emmet-vim'
Plug 'airblade/vim-gitgutter'
Plug 'fatih/vim-go', { 'do': ':GoUpdateBinaries' }
Plug 'tpope/vim-fugitive'
Plug 'terryma/vim-multiple-cursors'
Plug 'mhinz/vim-grepper'
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'
Plug 'preservim/nerdcommenter'

" List ends here. Plugins become visible to Vim after this call.
call plug#end()

" For Neovim > 0.1.5 and Vim > patch 7.4.1799 - https://github.com/vim/vim/commit/61be73bb0f965a895bfb064ea3e55476ac175162
" Based on Vim patch 7.4.1770 (`guicolors` option) - https://github.com/vim/vim/commit/8a633e3427b47286869aa4b96f2bfc1fe65b25cd
" https://github.com/neovim/neovim/wiki/Following-HEAD#20160511
if (has('termguicolors'))
  set termguicolors
endif

set rtp+=/usr/local/opt/fzf

" ----- SET VIM THEME -----

set background=dark
colorscheme solarized8
"colorscheme material
let g:airline_theme = 'simple'
"let g:material_theme_style = 'default'

let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#formatter = 'default'
let g:airline#extensions#tabline#show_close_button = 0 " remove 'X' at the end of the tabline
let g:airline#extensions#tabline#tabs_label = ''       " can put text here like BUFFERS to denote buffers (I clear it so nothing is shown)
let g:airline#extensions#tabline#buffers_label = ''    " can put text here like TABS to denote tabs (I clear it so nothing is shown)
let g:airline#extensions#tabline#show_tab_count = 0    " dont show tab numbers on the right
let g:airline#extensions#tabline#show_buffers = 0      " dont show buffers in the tabline
let g:airline#extensions#tabline#show_splits = 0       " disables the buffer name that displays on the right of the tabline
let g:airline#extensions#tabline#show_tab_nr = 0       " disable tab numbers
let g:airline#extensions#tabline#fnamemod = ':t'       " disable file paths in the tab

set noshowmode

" ----- END SET VIM THEME -----

syntax on

set mouse=a

" tmux knows the extended mouse mode
set ttymouse=xterm2

filetype plugin indent on

set title

" Hide buffer instead of abandoning when unloading
set hidden

" Enhanced command line completion
set wildmenu
" Complete files like a shell
set wildmode=list:longest
set wildignore=.svn,CVS,.git,.hg,*.o,*.a,*.class,*.mo,*.la,*.so,*.obj,*.swp,*.xpm,*.pyc,*.pyo,*.log

" Show line numbers
set number
" Show cursor position
set ruler
" Show current line
set cursorline
" Highlight matches as you type
set incsearch
" Highlight matches
set hlsearch
" set case insensitivity
set ignorecase
" unless there's a capital letter
set smartcase
" Turn on line wrapping
set wrap
" Show 3 lines of context around the cursor
set scrolloff=3

" No beeping
set visualbell
" abbrev. of messages (avoids 'hit enter')
set shortmess+=filmnrxoOtT

" Don't make a backup before overwriting a file
set nobackup
" And again
set nowritebackup
" Use an SCM instead of swap files
set noswapfile

" Show the status line all the time
set laststatus=2

" http://vim.wikia.com/wiki/Backspace_and_delete_problems
set backspace=indent,eol,start

set expandtab

set autoindent
" copy the previous indentation on autoindenting
set copyindent
" use multiple of shiftwidth when indenting with '<' and '>'
set shiftround
" set show matching parenthesis
set showmatch

" Read vim config defined in files
set modeline
set modelines=1

" command and search pattern history
set history=10000

" make plugins smoother
set lazyredraw

" always replace all occurences of a line
set gdefault

" http://vim.wikia.com/wiki/Toggle_auto-indenting_for_code_paste
set pastetoggle=<F2>

" disable folding
set nofoldenable

" Using clipboard as the default register
set clipboard=unnamed

" Tabs and indentation
set autoindent
set smartindent
set tabstop=2
set shiftwidth=2
set softtabstop=2

set splitbelow

set timeout ttimeoutlen=50

inoremap ( ()<left>
inoremap [ []<left>
inoremap { {}<left>
inoremap {<CR> {<CR>}<ESC>O

" Copy
vnoremap <C-c> yi

" Paste
nnoremap <C-v> pi
inoremap <C-v> <ESC>pi

" Cut
vnoremap <C-x> xi

" Undo
nnoremap <C-z> <nop>
vnoremap <C-z> <nop>
inoremap <C-z> <nop>
nnoremap <C-z> u
vnoremap <C-z> u
inoremap <C-z> <C-O>u

" Make the view port scroll faster
nnoremap <C-e> 3<C-e>
nnoremap <C-y> 3<C-y>
nnoremap <C-p> 3<C-p>

" Text selection
nnoremap <S-Up> v
nnoremap <S-Down> v
nnoremap <S-Left> v
nnoremap <S-Right> v
inoremap <S-Up> <Esc>v
inoremap <S-Down> <Esc>v
inoremap <S-Left> <Esc>v
inoremap <S-Right> <Esc>v
vnoremap <S-Up> k
vnoremap <S-Down> j
vnoremap <S-Left> h
vnoremap <S-Right> l

" Select all
map <C-a> <esc>ggVG<CR>

" Find and replaceOB
nnoremap <C-r> <esc>:%s///g
inoremap <C-r> <esc>:%s///g

" Duplicate line
nnoremap <C-d> <esc>:t.<CR>i
vnoremap <C-d> <esc>:t.<CR>i
inoremap <C-d> <esc>:t.<CR>i

" Backspace
nnoremap <BS> i<BS>
vnoremap <BS> xi

" Move up/down
nnoremap <C-S-Down> :m .+1<CR>==
nnoremap <C-S-Up> :m .-2<CR>==
inoremap <C-S-Down> <Esc>:m .+1<CR>==gi
inoremap <C-S-Up> <Esc>:m .-2<CR>==gi
vnoremap <C-S-Down> :m '>+1<CR>gv=gv
vnoremap <C-S-Up> :m '<-2<CR>gv=gv

" Quit
nnoremap <C-w> :q<CR>
inoremap <C-w> <Esc>:q<CR>
vnoremap <C-w> :q<CR>

" Grepper
nmap gs  <plug>(GrepperOperator)
xmap gs  <plug>(GrepperOperator)

" NERDTreeFind
nmap <C-R>r :NERDTreeFind<CR>

" FZF
nmap <C-p> :Files<CR>
nmap <C-f> :BLines<CR>

"" Plugins

" NERDTree
" autocmd vimenter * NERDTree
map <C-b> :NERDTreeToggle<CR>

" GoDef in new tab
autocmd FileType go nmap <silent> gt <Plug>(go-def-tab)

" Change cursor in Insert/Normal mode
let &t_SI = "\e[6 q"
let &t_EI = "\e[2 q"

" optional reset cursor on start:
augroup myCmds
au!
autocmd VimEnter * silent !echo -ne "\e[2 q"
augroup END
